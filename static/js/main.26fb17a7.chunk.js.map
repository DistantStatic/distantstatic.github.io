{"version":3,"sources":["components/Projects/Projects.module.css","components/PageTitle/PageTitle.module.css","components/Projects/Project/Project.tsx","components/Projects/Projects.tsx","components/PageTitle/PageTitle.tsx","containers/MainDisplay/MainDisplay.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["module","exports","Project","darkMode","name","description","link","ghub","Card","bg","style","marginTop","marginBottom","border","Header","Title","Body","Text","Footer","Link","href","Projects","className","classes","ProjectsTitle","projectContainer","Row","map","project","Col","xs","md","xl","PageTitle","changeMode","title","id","Icon","onClick","MainDisplay","changeDarkMode","App","useState","setDarkMode","app","lightMode","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fb17a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectsTitle\":\"Projects_ProjectsTitle__2WLRO\",\"projectContainer\":\"Projects_projectContainer__1dPDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"PageTitle_Icon__1fZj9\",\"IconScrolled\":\"PageTitle_IconScrolled__2uhbA\",\"title\":\"PageTitle_title__2ibVO\"};","import { Card } from 'react-bootstrap'\r\n\r\nexport default function Project({darkMode, name, description, link, ghub}: {darkMode: boolean, name: string, description: string, link: string, ghub: string}) {\r\n    return (\r\n    <Card \r\n        bg={`${darkMode ? 'dark' : 'light'}`} \r\n        style={{ marginTop: '2rem', marginBottom: '2rem'}} \r\n        border={`${darkMode ? 'light' : 'dark'}`}\r\n        >\r\n        <Card.Header>\r\n            <Card.Title>{name}</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n            {\r\n            //<CardImg>{props.img}</CardImg>\r\n            }\r\n            <Card.Text>{description}</Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n            <Card.Link href={link}>See Live</Card.Link>\r\n            <Card.Link href={ghub}>See Code</Card.Link>\r\n        </Card.Footer>\r\n    </Card>\r\n)}","import {\r\n    Row,\r\n    Col\r\n} from 'react-bootstrap';\r\n\r\nimport classes from './Projects.module.css';\r\nimport Project from './Project/Project';\r\n\r\nexport default function Projects({darkMode}: {darkMode: boolean}) {\r\n    const projectList = [\r\n        {\r\n            name: \"CongressTrack/TrackUS\",\r\n            description: \"Track you elected officials in Washington D.C.! Shows information on recent votes and bills, as well as detailed delegate information. Uses a django backend to safely relay the API information\",\r\n            link: \"https://distantstatic.github.io/congress-track-frontend\",\r\n            ghub: \"https://github.com/DistantStatic/congress-track-frontend\"\r\n        },\r\n        {\r\n            name: \"League Scout\",\r\n            description: \"NextJS app that displays player ranks, match history, and match details. Data aggregated from Riot Game's API. Buit with TypeScript and styled with TailwindCSS\",\r\n            link: \"https://www.lolscout.com\",\r\n            ghub: \"https://github.com/DistantStatic/league-scout\"\r\n\r\n        },\r\n        {\r\n            name: \"Tyrian Scout\",\r\n            description: \"View all daily quests, quest details, and rewards for Guild Wars 2. Data sourced from the Guild Wars2 API\",\r\n            link: \"https://www.tyrianscout.com\",\r\n            ghub: \"https://github.com/DistantStatic/tyrianscout\"\r\n\r\n        },\r\n        {\r\n            name: \"XSAF Dynamic Campaign Scores\",\r\n            description: \"A site created in conjunction with the XSAF community to display scores against their new \\\"GOAP\\\" AI managed Dynamic Campaign.\",\r\n            link: \"https://distantstatic.github.io/dyn-server-score\",\r\n            ghub: \"https://github.com/DistantStatic/dyn-server-score\"\r\n        },\r\n        {\r\n            name: \"Portfolio\",\r\n            description: \"You're looking at it!\",\r\n            link: \"#\",\r\n            ghub: \"https://github.com/DistantStatic/\"\r\n        }\r\n    ]\r\n    return (\r\n        <>\r\n            <h1 className={classes.ProjectsTitle}>Projects</h1>\r\n            \r\n            <div className={classes.projectContainer}>\r\n                <Row>\r\n                    {projectList.map((project) => {\r\n                        return (\r\n                            <Col xs={'12'} md={'6'} xl={'4'}>\r\n                            <Project\r\n                                darkMode={darkMode}\r\n                                name={project.name}\r\n                                description={project.description}\r\n                                link={project.link}\r\n                                ghub={project.ghub}\r\n                                />\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { CgDarkMode } from 'react-icons/cg';\r\n\r\nimport classes from './PageTitle.module.css';\r\n\r\nexport default function PageTitle({changeMode}: {changeMode: ()=>void}) {\r\n\r\n    return (\r\n        <div className={classes.title}>\r\n            <h1>Hello Friend</h1>\r\n            <CgDarkMode id=\"icon\" className={classes.Icon} onClick={() => changeMode()}>Change Mode</CgDarkMode>\r\n        </div>\r\n    )\r\n}","import Projects from '../../components/Projects/Projects';\r\nimport PageTitle from '../../components/PageTitle/PageTitle';\r\n\r\nexport default function MainDisplay({darkMode, changeDarkMode}: {darkMode: boolean, changeDarkMode: ()=>void}) {\r\n\r\n    return (\r\n    <main id=\"main\">\r\n        <PageTitle changeMode={changeDarkMode}/>\r\n        <Projects darkMode={darkMode} />\r\n    </main>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport MainDisplay from './containers/MainDisplay/MainDisplay';\r\nimport classes from './App.module.css'\r\n\r\nexport default function App() {\r\n    const [darkMode, setDarkMode] = useState(true)\r\n\r\n    function toggleDarkMode() {\r\n        setDarkMode(!darkMode)\r\n    }\r\n\r\n    return (\r\n        <div className={`${classes.app} ${darkMode ? classes.darkMode : classes.lightMode}`}>\r\n            <Container>\r\n                <MainDisplay darkMode={darkMode} changeDarkMode={toggleDarkMode} />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","const reportWebVitals = (onPerfEntry?:any) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YLfp\",\"darkMode\":\"App_darkMode__3zrqa\",\"lightMode\":\"App_lightMode__3TaGK\"};"],"sourceRoot":""}