{"version":3,"sources":["containers/MainDisplay/MainDisplay.module.css","components/Projects/Projects.module.css","components/Utility/Utility.module.css","components/Projects/Project/Project.module.css","logo.svg","hoc/Aux.js","components/Projects/Project/Project.js","components/Projects/Projects.js","components/PageTitle/PageTitle.js","components/Utility/Utility.js","containers/MainDisplay/MainDisplay.js","App.js","reportWebVitals.js","index.js","components/PageTitle/PageTitle.module.css"],"names":["module","exports","aux","props","children","project","Card","CardHeader","CardTitle","name","CardBody","CardText","description","CardFooter","CardLink","href","link","hred","ghub","projects","Aux","className","classes","ProjectsTitle","Row","map","Col","Project","window","addEventListener","console","log","document","querySelector","scrollY","navElement","classList","Icon","IconScrolled","join","pageTitle","id","onClick","changeMode","utility","GraphHolder","data","keys","indexBy","maxValue","margin","top","right","bottom","left","curve","borderWidth","borderColor","from","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","colors","scheme","fillOpacity","blendMode","animate","motionConfig","isInteractive","legends","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style","MainDisplay","state","darkMode","setState","prevState","this","MainDisplayDark","MainDisplayLight","PageTitle","Projects","Utility","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d0e9a8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainDisplayDark\":\"MainDisplay_MainDisplayDark__3OLn2\",\"MainDisplayLight\":\"MainDisplay_MainDisplayLight__2tYdg\",\"row\":\"MainDisplay_row__36EwA\",\"col\":\"MainDisplay_col__Am2nl\",\"card\":\"MainDisplay_card__3sEiB\",\"card-header\":\"MainDisplay_card-header__lwI6j\",\"card-title\":\"MainDisplay_card-title__pyO_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectsTitle\":\"Projects_ProjectsTitle__30msZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GraphHolder\":\"Utility_GraphHolder__2-7pw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Project_Header__3ogC5\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const aux = (props) => (props.children);\nexport default aux;","import {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    CardText,\n    CardFooter,\n    CardLink,\n    Button\n} from 'reactstrap';\nimport classes from './Project.module.css';\n\nconst project = (props) => (\n    <Card>\n        <CardHeader>\n            <CardTitle>{props.name}</CardTitle>\n        </CardHeader>\n        <CardBody>\n            {\n            //<CardImg>{props.img}</CardImg>\n            }\n            <CardText>{props.description}</CardText>\n        </CardBody>\n        <CardFooter>\n            <CardLink href={props.link}>See Live</CardLink>\n            <CardLink hred={props.ghub}>See Code</CardLink>\n        </CardFooter>\n    </Card>\n)\n\nexport default project;","import {\n    Row,\n    Col\n} from 'reactstrap';\nimport Aux from '../../hoc/Aux';\n\nimport classes from './Projects.module.css';\nimport Project from './Project/Project';\n\nconst projects = (props) => {\n    const projectList = [\n        {\n            name: \"CongressTrack/TrackUS\",\n            description: \"Track you elected officials in Washington D.C.! Shows information on recent votes and bills, as well as detailed delegate information. Uses a django backend to safely relay the API information\",\n            link: \"https://distantstatic.github.io/congress-track-frontend\",\n            ghub: \"https://github.com/DistantStatic/congress-track-frontend\"\n        },\n        {\n            name: \"XSAF Dynamic Campaign Scores\",\n            description: \"A site created in conjunction with the XSAF community to display scores against their new \\\"GOAP\\\" AI managed Dynamic Campaign.\",\n            link: \"https://distantstatic.github.io/dyn-server-score\",\n            ghub: \"https://github.com/DistantStatic/dyn-server-score\"\n        },\n        {\n            name: \"Portfolio\",\n            description: \"You're looking at it!\",\n            link: \"#\",\n            ghub: \"https://github.com/DistantStatic/\"\n        }\n    ]\n    return (\n        <Aux>\n            <h1 className={classes.ProjectsTitle}>Projects</h1>\n            <Row>\n            {projectList.map((project) => {\n                return (\n                    <Col>\n                    <Project\n                        name={project.name}\n                        description={project.description}\n                        link={project.link}\n                        ghub={project.ghub}\n                        />\n                    </Col>\n                )\n            })}\n            </Row>\n        </Aux>\n    )\n}\n\nexport default projects;","import Aux from '../../hoc/Aux';\nimport { CgDarkMode } from 'react-icons/cg';\n\nimport classes from './PageTitle.module.css';\n\nconst pageTitle = (props) => (\n    <Aux>\n        <h1>Hello Friend</h1>\n        <CgDarkMode id=\"icon\" className={classes.Icon} onClick={props.changeMode}>Change Mode</CgDarkMode>\n    </Aux>\n)\nfunction changeCss () {\n    console.log(document.querySelector(\"#main\").scrollY)\n    var navElement = document.querySelector(\"#icon\");\n    document.querySelector(\"#main\").scrollY > 50 ? navElement.classList=[classes.Icon, classes.IconScrolled].join(\" \") : navElement.classList=[classes.Icon].join(\" \");\n  }\n  window.addEventListener(\"scroll\", changeCss , false);\nexport default pageTitle;","import classes from './Utility.module.css';\nimport { ResponsiveRadar } from '@nivo/radar'\n\nconst utility = (props) => {\n    const data = [\n        {\n            \"Skill\": \"Python\",\n            \"projects\": 10,\n            \"frameworks\": 2,\n            \"years\": 3\n        },\n        {\n            \"Skill\": \"Javascript\",\n            \"projects\": 4,\n            \"frameworks\": 2,\n            \"years\": 2\n        },\n        {\n            \"Skill\": \"PHP\",\n            \"projects\": 3,\n            \"frameworks\": 1,\n            \"years\": 2\n        }\n    ]\n    return (\n        <div className={classes.GraphHolder}>\n        <ResponsiveRadar\n            data={data}\n            keys={[ 'projects', 'frameworks', 'years' ]}\n            indexBy=\"Skill\"\n            maxValue=\"auto\"\n            margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n            curve=\"linearClosed\"\n            borderWidth={2}\n            borderColor={{ from: 'color' }}\n            gridLevels={5}\n            gridShape=\"circular\"\n            gridLabelOffset={36}\n            enableDots={true}\n            dotSize={10}\n            dotColor={{ theme: 'background' }}\n            dotBorderWidth={2}\n            dotBorderColor={{ from: 'color' }}\n            enableDotLabel={true}\n            dotLabel=\"value\"\n            dotLabelYOffset={-12}\n            colors={{ scheme: 'nivo' }}\n            fillOpacity={0.25}\n            blendMode=\"multiply\"\n            animate={true}\n            motionConfig=\"wobbly\"\n            isInteractive={true}\n            legends={[\n                {\n                    anchor: 'top-left',\n                    direction: 'column',\n                    translateX: -50,\n                    translateY: -40,\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemTextColor: '#999',\n                    symbolSize: 12,\n                    symbolShape: 'circle',\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemTextColor: '#000'\n                            }\n                        }\n                    ]\n                }\n            ]}\n        />\n        </div>\n    )\n}\n\nexport default utility;","import { Component } from 'react';\n\nimport classes from './MainDisplay.module.css';\n\nimport Aux from '../../hoc/Aux';\nimport Projects from '../../components/Projects/Projects';\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport Utility from '../../components/Utility/Utility';\n\nexport default class MainDisplay extends Component {\n    state = {\n        darkMode: true\n    }\n\n    changeMode = () => {\n        this.setState((prevState) => ({darkMode: !prevState.darkMode}))\n    }\n\n    render() {\n        return (\n        <main id=\"main\" className={this.state.darkMode ? classes.MainDisplayDark : classes.MainDisplayLight}>\n            <PageTitle changeMode={this.changeMode}/>\n            <Projects />\n            <Utility />\n        </main>\n        )\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport MainDisplay from './containers/MainDisplay/MainDisplay';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainDisplay />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"PageTitle_Icon__1lZBX\",\"IconScrolled\":\"PageTitle_IconScrolled__7Lkp4\"};"],"sourceRoot":""}